import { NarrowedContext } from 'telegraf';
import { Message, Update } from 'telegraf/typings/core/types/typegram';
import { MyContext } from '../models/session';

export const currentQuestTaskHandler = async (
  ctx: NarrowedContext<
    MyContext,
    {
      message: Update.New & Update.NonChannel & Message.TextMessage;
      update_id: number;
    }
  >
) => {
  if (ctx.message?.text?.startsWith('/')) {
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç—á–µ—Ç –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏—è.'
    );
    return;
  } else {
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ï–©–ï –†–ê–ó –∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ –∫ –Ω–µ–º—É —Ñ–æ—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è'
    );
  }
};

// export const currentQuestCommand = async (bot: Telegraf<MyContext>) => {
//   bot.command("currentQuest", async (ctx) => {
//     console.log("1");
//     const userId = ctx.from?.id;
//     if (userId) {
//       const userRes = await pool.query(
//         "SELECT active_task, subscription FROM users WHERE user_id = $1",
//         [userId]
//       );
//       const userRecord = userRes.rows[0];

//       if (userRecord) {
//         const { active_task, subscription } = userRecord;

//         if (subscription) {
//           if (active_task) {
//             const taskRes = await pool.query(
//               "SELECT quest_text FROM tasks WHERE task_id = $1",
//               [active_task]
//             );
//             const taskText = taskRes.rows[0]?.quest_text || "";
//             console.log(active_task);
//             await ctx.reply(taskText, questConfirmButtons(active_task.task_id));
//           } else {
//             await ctx.reply("–£ –≤–∞—Å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è. ü§î");
//           }
//         } else {
//           await ctx.reply(
//             "–£ –≤–∞—Å –Ω–µ –æ–ø–ª–∞—á–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É."
//           );
//         }
//       } else {
//         await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
//       }
//     }
//   });
// };
